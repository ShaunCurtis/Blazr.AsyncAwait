@page "/weather"
@implements IHandleEvent
<PageTitle>Weather</PageTitle>
@using Blazr.Async
<h1>Weather</h1>

<p>Weather, but not as you know it.</p>
<div>
    <button class="btn btn-primary" @onclick="OnGetTemperatureAsync">Get the Temperature</button>
</div>

<div class="bg-dark text-white m-2 p-2">
    @if (_processing)
    {
        <pre>Waiting on Gauge</pre>
    }
    else
    {
        <pre>Temperature &deg;C : @(_temperature?.ToString() ?? "null")</pre>
    }
</div>

@code {
    private int? _temperature;
    private bool _processing;

    private Task OnGetTemperatureAsync()
    {
        _processing = true;
        StateHasChanged();

        var awaiter = TemperatureGauge.GetTemperatureAsync().GetAwaiter();

        awaiter.OnCompleted(() =>
        {
            _temperature = awaiter.GetResult();
            _processing = false;
            StateHasChanged();
        });

        return Task.CompletedTask;
    }

    // Overrides the ComponentBase handler
    // removing all the automatic calls to StateHasChanged
    Task IHandleEvent.HandleEventAsync(EventCallbackWorkItem item, object? arg)
        => item.InvokeAsync(arg);

}
